services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: resume_optim
      MYSQL_USER: resume_user
      MYSQL_PASSWORD: resume123
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
    networks:
      - resume-optim-dev

  # Redis缓存
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - resume-optim-dev

  # Consul服务注册中心  
  consul:
    image: consul:1.15
    restart: always
    hostname: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_dev_data:/consul/data
    command: 
      - consul
      - agent
      - -server
      - -bootstrap-expect=1
      - -datacenter=dc1
      - -data-dir=/consul/data
      - -node=consul-server
      - -client=0.0.0.0
      - -ui
      - -log-level=INFO
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - resume-optim-dev

  # 用户服务
  user-service:
    build:
      context: ./backend/services/user-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
      - "9000:9000"
    environment:
      - SERVER_HTTP_ADDR=0.0.0.0:8000
      - SERVER_GRPC_ADDR=0.0.0.0:9000
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=123456
      - DATABASE_NAME=resume_optim
      - REDIS_ADDR=redis:6379
      - CONSUL_ADDRESS=consul:8500
      - SERVICE_NAME=user-service
      - SERVICE_VERSION=1.0.0
    depends_on:
      consul:
        condition: service_healthy
      mysql:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - resume-optim-dev

  # 文件服务
  file-service:
    build:
      context: ./backend/services/file-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8001:8001"
      - "9001:9001"
    environment:
      - SERVER_HTTP_ADDR=0.0.0.0:8001
      - SERVER_GRPC_ADDR=0.0.0.0:9001
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=123456
      - DATABASE_NAME=resume_optim
      - REDIS_ADDR=redis:6379
      - CONSUL_ADDRESS=consul:8500
      - SERVICE_NAME=file-service
      - SERVICE_VERSION=1.0.0
    depends_on:
      consul:
        condition: service_healthy
      mysql:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - file_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - resume-optim-dev

  # AI服务
  ai-service:
    build:
      context: ./backend/services/ai-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8002:8002"
      - "9002:9002"
    environment:
      - SERVER_HTTP_ADDR=0.0.0.0:8002
      - SERVER_GRPC_ADDR=0.0.0.0:9002
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=123456
      - DATABASE_NAME=resume_optim
      - REDIS_ADDR=redis:6379
      - CONSUL_ADDRESS=consul:8500
      - SERVICE_NAME=ai-service
      - SERVICE_VERSION=1.0.0
    depends_on:
      consul:
        condition: service_healthy
      mysql:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - resume-optim-dev

  # 解析服务
  parser-service:
    build:
      context: ./backend/services/parser-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8003:8003"
      - "9003:9003"
    environment:
      - SERVER_HTTP_ADDR=0.0.0.0:8003
      - SERVER_GRPC_ADDR=0.0.0.0:9003
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=123456
      - DATABASE_NAME=resume_optim
      - REDIS_ADDR=redis:6379
      - CONSUL_ADDRESS=consul:8500
      - SERVICE_NAME=parser-service
      - SERVICE_VERSION=1.0.0
    depends_on:
      consul:
        condition: service_healthy
      mysql:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - resume-optim-dev

volumes:
  mysql_dev_data:
  redis_dev_data:
  consul_dev_data:
  file_uploads:

networks:
  resume-optim-dev:
    driver: bridge
