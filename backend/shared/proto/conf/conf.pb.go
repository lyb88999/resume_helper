// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.27.3
// source: backend/shared/proto/conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 包含了所有微服务配置项的统一引导结构
type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        *Server                `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Data          *Data                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Registry      *Registry              `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"`
	Auth          *Auth                  `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`       // 来自 user-service 的配置
	Storage       *Storage               `protobuf:"bytes,5,opt,name=storage,proto3" json:"storage,omitempty"` // 来自 file-service 的配置
	Parser        *Parser                `protobuf:"bytes,6,opt,name=parser,proto3" json:"parser,omitempty"`   // 来自 parser-service 的配置
	Ai            *AI                    `protobuf:"bytes,7,opt,name=ai,proto3" json:"ai,omitempty"`           // 来自 ai-service 的配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *Bootstrap) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Bootstrap) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Bootstrap) GetParser() *Parser {
	if x != nil {
		return x.Parser
	}
	return nil
}

func (x *Bootstrap) GetAi() *AI {
	if x != nil {
		return x.Ai
	}
	return nil
}

// 通用服务配置
type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

// 通用数据源配置
type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis         *Data_Redis            `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

// 通用服务注册配置
type Registry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consul        *Registry_Consul       `protobuf:"bytes,1,opt,name=consul,proto3" json:"consul,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Registry) GetConsul() *Registry_Consul {
	if x != nil {
		return x.Consul
	}
	return nil
}

// Auth - 来自 user-service 的配置
type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JwtSecret     string                 `protobuf:"bytes,1,opt,name=jwt_secret,json=jwtSecret,proto3" json:"jwt_secret,omitempty"`
	JwtExpire     *durationpb.Duration   `protobuf:"bytes,2,opt,name=jwt_expire,json=jwtExpire,proto3" json:"jwt_expire,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Auth) GetJwtSecret() string {
	if x != nil {
		return x.JwtSecret
	}
	return ""
}

func (x *Auth) GetJwtExpire() *durationpb.Duration {
	if x != nil {
		return x.JwtExpire
	}
	return nil
}

// Storage - 来自 file-service 的配置
type Storage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // local, minio
	Local         *Storage_Local         `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	Minio         *Storage_MinIO         `protobuf:"bytes,3,opt,name=minio,proto3" json:"minio,omitempty"`
	MaxFileSize   int64                  `protobuf:"varint,4,opt,name=max_file_size,json=maxFileSize,proto3" json:"max_file_size,omitempty"`
	AllowedTypes  []string               `protobuf:"bytes,5,rep,name=allowed_types,json=allowedTypes,proto3" json:"allowed_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage) Reset() {
	*x = Storage{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Storage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Storage) GetLocal() *Storage_Local {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Storage) GetMinio() *Storage_MinIO {
	if x != nil {
		return x.Minio
	}
	return nil
}

func (x *Storage) GetMaxFileSize() int64 {
	if x != nil {
		return x.MaxFileSize
	}
	return 0
}

func (x *Storage) GetAllowedTypes() []string {
	if x != nil {
		return x.AllowedTypes
	}
	return nil
}

// Parser - 来自 parser-service 的配置
type Parser struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	File          *FileConfig              `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Parsers       map[string]*ParserConfig `protobuf:"bytes,2,rep,name=parsers,proto3" json:"parsers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Task          *TaskConfig              `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Parser) Reset() {
	*x = Parser{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Parser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parser) ProtoMessage() {}

func (x *Parser) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parser.ProtoReflect.Descriptor instead.
func (*Parser) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Parser) GetFile() *FileConfig {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Parser) GetParsers() map[string]*ParserConfig {
	if x != nil {
		return x.Parsers
	}
	return nil
}

func (x *Parser) GetTask() *TaskConfig {
	if x != nil {
		return x.Task
	}
	return nil
}

type FileConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxFileSize     int64                  `protobuf:"varint,1,opt,name=max_file_size,json=maxFileSize,proto3" json:"max_file_size,omitempty"`
	AllowedTypes    []string               `protobuf:"bytes,2,rep,name=allowed_types,json=allowedTypes,proto3" json:"allowed_types,omitempty"`
	TempDir         string                 `protobuf:"bytes,3,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
	CleanupInterval int32                  `protobuf:"varint,4,opt,name=cleanup_interval,json=cleanupInterval,proto3" json:"cleanup_interval,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileConfig) Reset() {
	*x = FileConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileConfig) ProtoMessage() {}

func (x *FileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileConfig.ProtoReflect.Descriptor instead.
func (*FileConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *FileConfig) GetMaxFileSize() int64 {
	if x != nil {
		return x.MaxFileSize
	}
	return 0
}

func (x *FileConfig) GetAllowedTypes() []string {
	if x != nil {
		return x.AllowedTypes
	}
	return nil
}

func (x *FileConfig) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

func (x *FileConfig) GetCleanupInterval() int32 {
	if x != nil {
		return x.CleanupInterval
	}
	return 0
}

type ParserConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Options       map[string]string      `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParserConfig) Reset() {
	*x = ParserConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserConfig) ProtoMessage() {}

func (x *ParserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserConfig.ProtoReflect.Descriptor instead.
func (*ParserConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *ParserConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ParserConfig) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type TaskConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaxConcurrent  int32                  `protobuf:"varint,1,opt,name=max_concurrent,json=maxConcurrent,proto3" json:"max_concurrent,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	RetryCount     int32                  `protobuf:"varint,3,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	QueueName      string                 `protobuf:"bytes,4,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TaskConfig) Reset() {
	*x = TaskConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskConfig) ProtoMessage() {}

func (x *TaskConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskConfig.ProtoReflect.Descriptor instead.
func (*TaskConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *TaskConfig) GetMaxConcurrent() int32 {
	if x != nil {
		return x.MaxConcurrent
	}
	return 0
}

func (x *TaskConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *TaskConfig) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *TaskConfig) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// AI - 来自 ai-service 的配置
type AI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         *ModelConfig           `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Embedding     *EmbeddingConfig       `protobuf:"bytes,2,opt,name=embedding,proto3" json:"embedding,omitempty"`
	Eino          *EinoConfig            `protobuf:"bytes,3,opt,name=eino,proto3" json:"eino,omitempty"`
	Vector        *VectorConfig          `protobuf:"bytes,4,opt,name=vector,proto3" json:"vector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AI) Reset() {
	*x = AI{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AI) ProtoMessage() {}

func (x *AI) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AI.ProtoReflect.Descriptor instead.
func (*AI) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *AI) GetModel() *ModelConfig {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *AI) GetEmbedding() *EmbeddingConfig {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *AI) GetEino() *EinoConfig {
	if x != nil {
		return x.Eino
	}
	return nil
}

func (x *AI) GetVector() *VectorConfig {
	if x != nil {
		return x.Vector
	}
	return nil
}

type ModelConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Provider       string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ApiKey         string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	BaseUrl        string                 `protobuf:"bytes,3,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	ModelName      string                 `protobuf:"bytes,4,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	MaxTokens      int32                  `protobuf:"varint,5,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Temperature    float32                `protobuf:"fixed32,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,7,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ModelConfig) Reset() {
	*x = ModelConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelConfig) ProtoMessage() {}

func (x *ModelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelConfig.ProtoReflect.Descriptor instead.
func (*ModelConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{11}
}

func (x *ModelConfig) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ModelConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ModelConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *ModelConfig) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ModelConfig) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *ModelConfig) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ModelConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type EmbeddingConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	BaseUrl       string                 `protobuf:"bytes,3,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	ModelName     string                 `protobuf:"bytes,4,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Dimension     int32                  `protobuf:"varint,5,opt,name=dimension,proto3" json:"dimension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddingConfig) Reset() {
	*x = EmbeddingConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingConfig) ProtoMessage() {}

func (x *EmbeddingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingConfig.ProtoReflect.Descriptor instead.
func (*EmbeddingConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{12}
}

func (x *EmbeddingConfig) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *EmbeddingConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *EmbeddingConfig) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *EmbeddingConfig) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *EmbeddingConfig) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

type EinoConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnableTracing bool                   `protobuf:"varint,1,opt,name=enable_tracing,json=enableTracing,proto3" json:"enable_tracing,omitempty"`
	EnableCaching bool                   `protobuf:"varint,2,opt,name=enable_caching,json=enableCaching,proto3" json:"enable_caching,omitempty"`
	MaxConcurrent int32                  `protobuf:"varint,3,opt,name=max_concurrent,json=maxConcurrent,proto3" json:"max_concurrent,omitempty"`
	LogLevel      string                 `protobuf:"bytes,4,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EinoConfig) Reset() {
	*x = EinoConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EinoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EinoConfig) ProtoMessage() {}

func (x *EinoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EinoConfig.ProtoReflect.Descriptor instead.
func (*EinoConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{13}
}

func (x *EinoConfig) GetEnableTracing() bool {
	if x != nil {
		return x.EnableTracing
	}
	return false
}

func (x *EinoConfig) GetEnableCaching() bool {
	if x != nil {
		return x.EnableCaching
	}
	return false
}

func (x *EinoConfig) GetMaxConcurrent() int32 {
	if x != nil {
		return x.MaxConcurrent
	}
	return 0
}

func (x *EinoConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

type VectorConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Provider            string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Address             string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CollectionName      string                 `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Dimension           int32                  `protobuf:"varint,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	SimilarityThreshold float32                `protobuf:"fixed32,5,opt,name=similarity_threshold,json=similarityThreshold,proto3" json:"similarity_threshold,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *VectorConfig) Reset() {
	*x = VectorConfig{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorConfig) ProtoMessage() {}

func (x *VectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorConfig.ProtoReflect.Descriptor instead.
func (*VectorConfig) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{14}
}

func (x *VectorConfig) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *VectorConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VectorConfig) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *VectorConfig) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *VectorConfig) GetSimilarityThreshold() float32 {
	if x != nil {
		return x.SimilarityThreshold
	}
	return 0
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	ReadTimeout   *durationpb.Duration   `protobuf:"bytes,3,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout  *durationpb.Duration   `protobuf:"bytes,4,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

type Registry_Consul struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Scheme        string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Consul) Reset() {
	*x = Registry_Consul{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Consul) ProtoMessage() {}

func (x *Registry_Consul) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Consul.ProtoReflect.Descriptor instead.
func (*Registry_Consul) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Registry_Consul) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Registry_Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

type Storage_Local struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage_Local) Reset() {
	*x = Storage_Local{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage_Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage_Local) ProtoMessage() {}

func (x *Storage_Local) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage_Local.ProtoReflect.Descriptor instead.
func (*Storage_Local) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Storage_Local) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Storage_MinIO struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKey     string                 `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey     string                 `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Bucket        string                 `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Secure        bool                   `protobuf:"varint,5,opt,name=secure,proto3" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage_MinIO) Reset() {
	*x = Storage_MinIO{}
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage_MinIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage_MinIO) ProtoMessage() {}

func (x *Storage_MinIO) ProtoReflect() protoreflect.Message {
	mi := &file_backend_shared_proto_conf_conf_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage_MinIO.ProtoReflect.Descriptor instead.
func (*Storage_MinIO) Descriptor() ([]byte, []int) {
	return file_backend_shared_proto_conf_conf_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Storage_MinIO) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Storage_MinIO) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Storage_MinIO) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *Storage_MinIO) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Storage_MinIO) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

var File_backend_shared_proto_conf_conf_proto protoreflect.FileDescriptor

const file_backend_shared_proto_conf_conf_proto_rawDesc = "" +
	"\n" +
	"$backend/shared/proto/conf/conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\"\xb0\x02\n" +
	"\tBootstrap\x12*\n" +
	"\x06server\x18\x01 \x01(\v2\x12.kratos.api.ServerR\x06server\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.kratos.api.DataR\x04data\x120\n" +
	"\bregistry\x18\x03 \x01(\v2\x14.kratos.api.RegistryR\bregistry\x12$\n" +
	"\x04auth\x18\x04 \x01(\v2\x10.kratos.api.AuthR\x04auth\x12-\n" +
	"\astorage\x18\x05 \x01(\v2\x13.kratos.api.StorageR\astorage\x12*\n" +
	"\x06parser\x18\x06 \x01(\v2\x12.kratos.api.ParserR\x06parser\x12\x1e\n" +
	"\x02ai\x18\a \x01(\v2\x0e.kratos.api.AIR\x02ai\"\xb8\x02\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x1ai\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1ai\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\xdd\x02\n" +
	"\x04Data\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.kratos.api.Data.DatabaseR\bdatabase\x12,\n" +
	"\x05redis\x18\x02 \x01(\v2\x16.kratos.api.Data.RedisR\x05redis\x1a:\n" +
	"\bDatabase\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x1a\xb3\x01\n" +
	"\x05Redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12<\n" +
	"\fread_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeout\"{\n" +
	"\bRegistry\x123\n" +
	"\x06consul\x18\x01 \x01(\v2\x1b.kratos.api.Registry.ConsulR\x06consul\x1a:\n" +
	"\x06Consul\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\"_\n" +
	"\x04Auth\x12\x1d\n" +
	"\n" +
	"jwt_secret\x18\x01 \x01(\tR\tjwtSecret\x128\n" +
	"\n" +
	"jwt_expire\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\tjwtExpire\"\xf9\x02\n" +
	"\aStorage\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12/\n" +
	"\x05local\x18\x02 \x01(\v2\x19.kratos.api.Storage.LocalR\x05local\x12/\n" +
	"\x05minio\x18\x03 \x01(\v2\x19.kratos.api.Storage.MinIOR\x05minio\x12\"\n" +
	"\rmax_file_size\x18\x04 \x01(\x03R\vmaxFileSize\x12#\n" +
	"\rallowed_types\x18\x05 \x03(\tR\fallowedTypes\x1a\x1b\n" +
	"\x05Local\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x1a\x91\x01\n" +
	"\x05MinIO\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1d\n" +
	"\n" +
	"access_key\x18\x02 \x01(\tR\taccessKey\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x03 \x01(\tR\tsecretKey\x12\x16\n" +
	"\x06bucket\x18\x04 \x01(\tR\x06bucket\x12\x16\n" +
	"\x06secure\x18\x05 \x01(\bR\x06secure\"\xf1\x01\n" +
	"\x06Parser\x12*\n" +
	"\x04file\x18\x01 \x01(\v2\x16.kratos.api.FileConfigR\x04file\x129\n" +
	"\aparsers\x18\x02 \x03(\v2\x1f.kratos.api.Parser.ParsersEntryR\aparsers\x12*\n" +
	"\x04task\x18\x03 \x01(\v2\x16.kratos.api.TaskConfigR\x04task\x1aT\n" +
	"\fParsersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.kratos.api.ParserConfigR\x05value:\x028\x01\"\x9b\x01\n" +
	"\n" +
	"FileConfig\x12\"\n" +
	"\rmax_file_size\x18\x01 \x01(\x03R\vmaxFileSize\x12#\n" +
	"\rallowed_types\x18\x02 \x03(\tR\fallowedTypes\x12\x19\n" +
	"\btemp_dir\x18\x03 \x01(\tR\atempDir\x12)\n" +
	"\x10cleanup_interval\x18\x04 \x01(\x05R\x0fcleanupInterval\"\xa5\x01\n" +
	"\fParserConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12?\n" +
	"\aoptions\x18\x02 \x03(\v2%.kratos.api.ParserConfig.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x01\n" +
	"\n" +
	"TaskConfig\x12%\n" +
	"\x0emax_concurrent\x18\x01 \x01(\x05R\rmaxConcurrent\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05R\x0etimeoutSeconds\x12\x1f\n" +
	"\vretry_count\x18\x03 \x01(\x05R\n" +
	"retryCount\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x04 \x01(\tR\tqueueName\"\xcc\x01\n" +
	"\x02AI\x12-\n" +
	"\x05model\x18\x01 \x01(\v2\x17.kratos.api.ModelConfigR\x05model\x129\n" +
	"\tembedding\x18\x02 \x01(\v2\x1b.kratos.api.EmbeddingConfigR\tembedding\x12*\n" +
	"\x04eino\x18\x03 \x01(\v2\x16.kratos.api.EinoConfigR\x04eino\x120\n" +
	"\x06vector\x18\x04 \x01(\v2\x18.kratos.api.VectorConfigR\x06vector\"\xe6\x01\n" +
	"\vModelConfig\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\x12\x19\n" +
	"\bbase_url\x18\x03 \x01(\tR\abaseUrl\x12\x1d\n" +
	"\n" +
	"model_name\x18\x04 \x01(\tR\tmodelName\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\x05 \x01(\x05R\tmaxTokens\x12 \n" +
	"\vtemperature\x18\x06 \x01(\x02R\vtemperature\x12'\n" +
	"\x0ftimeout_seconds\x18\a \x01(\x05R\x0etimeoutSeconds\"\x9e\x01\n" +
	"\x0fEmbeddingConfig\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\x12\x19\n" +
	"\bbase_url\x18\x03 \x01(\tR\abaseUrl\x12\x1d\n" +
	"\n" +
	"model_name\x18\x04 \x01(\tR\tmodelName\x12\x1c\n" +
	"\tdimension\x18\x05 \x01(\x05R\tdimension\"\x9e\x01\n" +
	"\n" +
	"EinoConfig\x12%\n" +
	"\x0eenable_tracing\x18\x01 \x01(\bR\renableTracing\x12%\n" +
	"\x0eenable_caching\x18\x02 \x01(\bR\renableCaching\x12%\n" +
	"\x0emax_concurrent\x18\x03 \x01(\x05R\rmaxConcurrent\x12\x1b\n" +
	"\tlog_level\x18\x04 \x01(\tR\blogLevel\"\xbe\x01\n" +
	"\fVectorConfig\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12'\n" +
	"\x0fcollection_name\x18\x03 \x01(\tR\x0ecollectionName\x12\x1c\n" +
	"\tdimension\x18\x04 \x01(\x05R\tdimension\x121\n" +
	"\x14similarity_threshold\x18\x05 \x01(\x02R\x13similarityThresholdBBZ@github.com/lyb88999/resume_helper/backend/shared/proto/conf;confb\x06proto3"

var (
	file_backend_shared_proto_conf_conf_proto_rawDescOnce sync.Once
	file_backend_shared_proto_conf_conf_proto_rawDescData []byte
)

func file_backend_shared_proto_conf_conf_proto_rawDescGZIP() []byte {
	file_backend_shared_proto_conf_conf_proto_rawDescOnce.Do(func() {
		file_backend_shared_proto_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_shared_proto_conf_conf_proto_rawDesc), len(file_backend_shared_proto_conf_conf_proto_rawDesc)))
	})
	return file_backend_shared_proto_conf_conf_proto_rawDescData
}

var file_backend_shared_proto_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_backend_shared_proto_conf_conf_proto_goTypes = []any{
	(*Bootstrap)(nil),           // 0: kratos.api.Bootstrap
	(*Server)(nil),              // 1: kratos.api.Server
	(*Data)(nil),                // 2: kratos.api.Data
	(*Registry)(nil),            // 3: kratos.api.Registry
	(*Auth)(nil),                // 4: kratos.api.Auth
	(*Storage)(nil),             // 5: kratos.api.Storage
	(*Parser)(nil),              // 6: kratos.api.Parser
	(*FileConfig)(nil),          // 7: kratos.api.FileConfig
	(*ParserConfig)(nil),        // 8: kratos.api.ParserConfig
	(*TaskConfig)(nil),          // 9: kratos.api.TaskConfig
	(*AI)(nil),                  // 10: kratos.api.AI
	(*ModelConfig)(nil),         // 11: kratos.api.ModelConfig
	(*EmbeddingConfig)(nil),     // 12: kratos.api.EmbeddingConfig
	(*EinoConfig)(nil),          // 13: kratos.api.EinoConfig
	(*VectorConfig)(nil),        // 14: kratos.api.VectorConfig
	(*Server_HTTP)(nil),         // 15: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 16: kratos.api.Server.GRPC
	(*Data_Database)(nil),       // 17: kratos.api.Data.Database
	(*Data_Redis)(nil),          // 18: kratos.api.Data.Redis
	(*Registry_Consul)(nil),     // 19: kratos.api.Registry.Consul
	(*Storage_Local)(nil),       // 20: kratos.api.Storage.Local
	(*Storage_MinIO)(nil),       // 21: kratos.api.Storage.MinIO
	nil,                         // 22: kratos.api.Parser.ParsersEntry
	nil,                         // 23: kratos.api.ParserConfig.OptionsEntry
	(*durationpb.Duration)(nil), // 24: google.protobuf.Duration
}
var file_backend_shared_proto_conf_conf_proto_depIdxs = []int32{
	1,  // 0: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	2,  // 1: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	3,  // 2: kratos.api.Bootstrap.registry:type_name -> kratos.api.Registry
	4,  // 3: kratos.api.Bootstrap.auth:type_name -> kratos.api.Auth
	5,  // 4: kratos.api.Bootstrap.storage:type_name -> kratos.api.Storage
	6,  // 5: kratos.api.Bootstrap.parser:type_name -> kratos.api.Parser
	10, // 6: kratos.api.Bootstrap.ai:type_name -> kratos.api.AI
	15, // 7: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	16, // 8: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	17, // 9: kratos.api.Data.database:type_name -> kratos.api.Data.Database
	18, // 10: kratos.api.Data.redis:type_name -> kratos.api.Data.Redis
	19, // 11: kratos.api.Registry.consul:type_name -> kratos.api.Registry.Consul
	24, // 12: kratos.api.Auth.jwt_expire:type_name -> google.protobuf.Duration
	20, // 13: kratos.api.Storage.local:type_name -> kratos.api.Storage.Local
	21, // 14: kratos.api.Storage.minio:type_name -> kratos.api.Storage.MinIO
	7,  // 15: kratos.api.Parser.file:type_name -> kratos.api.FileConfig
	22, // 16: kratos.api.Parser.parsers:type_name -> kratos.api.Parser.ParsersEntry
	9,  // 17: kratos.api.Parser.task:type_name -> kratos.api.TaskConfig
	23, // 18: kratos.api.ParserConfig.options:type_name -> kratos.api.ParserConfig.OptionsEntry
	11, // 19: kratos.api.AI.model:type_name -> kratos.api.ModelConfig
	12, // 20: kratos.api.AI.embedding:type_name -> kratos.api.EmbeddingConfig
	13, // 21: kratos.api.AI.eino:type_name -> kratos.api.EinoConfig
	14, // 22: kratos.api.AI.vector:type_name -> kratos.api.VectorConfig
	24, // 23: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	24, // 24: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	24, // 25: kratos.api.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	24, // 26: kratos.api.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	8,  // 27: kratos.api.Parser.ParsersEntry.value:type_name -> kratos.api.ParserConfig
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_backend_shared_proto_conf_conf_proto_init() }
func file_backend_shared_proto_conf_conf_proto_init() {
	if File_backend_shared_proto_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_shared_proto_conf_conf_proto_rawDesc), len(file_backend_shared_proto_conf_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backend_shared_proto_conf_conf_proto_goTypes,
		DependencyIndexes: file_backend_shared_proto_conf_conf_proto_depIdxs,
		MessageInfos:      file_backend_shared_proto_conf_conf_proto_msgTypes,
	}.Build()
	File_backend_shared_proto_conf_conf_proto = out.File
	file_backend_shared_proto_conf_conf_proto_goTypes = nil
	file_backend_shared_proto_conf_conf_proto_depIdxs = nil
}
