syntax = "proto3";
package kratos.api;

option go_package = "github.com/lyb88999/resume_helper/backend/services/parser-service/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Registry registry = 3;
  Parser parser = 4;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  Database database = 1;
  Redis redis = 2;
}

// 服务注册配置
message Registry {
  Consul consul = 1;
}

message Consul {
  string address = 1;
  string scheme = 2;
}

// 解析服务配置
message Parser {
  // 文件处理配置
  FileConfig file = 1;
  
  // 解析器配置
  map<string, ParserConfig> parsers = 2;
  
  // 任务配置
  TaskConfig task = 3;
}

message FileConfig {
  int64 max_file_size = 1;      // 最大文件大小 (bytes)
  repeated string allowed_types = 2; // 允许的文件类型
  string temp_dir = 3;          // 临时目录
  int32 cleanup_interval = 4;   // 清理间隔 (minutes)
}

message ParserConfig {
  bool enabled = 1;
  map<string, string> options = 2;
}

message TaskConfig {
  int32 max_concurrent = 1;     // 最大并发数
  int32 timeout_seconds = 2;    // 超时时间
  int32 retry_count = 3;        // 重试次数
  string queue_name = 4;        // 队列名称
}
