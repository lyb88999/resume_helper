// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.27.3
// source: file/v1/file.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件信息
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	OriginalName  string                 `protobuf:"bytes,3,opt,name=original_name,json=originalName,proto3" json:"original_name,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	MimeType      string                 `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"` // uploaded, processing, completed, error
	UserId        int64                  `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_file_v1_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetOriginalName() string {
	if x != nil {
		return x.OriginalName
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *FileInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 上传请求
type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          []byte                 `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	UserId        int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_file_v1_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{1}
}

func (x *UploadRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UploadRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 上传响应
type UploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *FileInfo              `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadReply) Reset() {
	*x = UploadReply{}
	mi := &file_file_v1_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReply) ProtoMessage() {}

func (x *UploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReply.ProtoReflect.Descriptor instead.
func (*UploadReply) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{2}
}

func (x *UploadReply) GetFile() *FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

// 获取文件列表请求
type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage       int32                  `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`     // pdf, docx, md
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // uploaded, processing, completed, error
	UserId        int64                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAfter  string                 `protobuf:"bytes,6,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
	CreatedBefore string                 `protobuf:"bytes,7,opt,name=created_before,json=createdBefore,proto3" json:"created_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_file_v1_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{3}
}

func (x *ListFilesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFilesRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *ListFilesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListFilesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListFilesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListFilesRequest) GetCreatedAfter() string {
	if x != nil {
		return x.CreatedAfter
	}
	return ""
}

func (x *ListFilesRequest) GetCreatedBefore() string {
	if x != nil {
		return x.CreatedBefore
	}
	return ""
}

// 获取文件列表响应
type ListFilesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage       int32                  `protobuf:"varint,4,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	TotalPages    int32                  `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesReply) Reset() {
	*x = ListFilesReply{}
	mi := &file_file_v1_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesReply) ProtoMessage() {}

func (x *ListFilesReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesReply.ProtoReflect.Descriptor instead.
func (*ListFilesReply) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{4}
}

func (x *ListFilesReply) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListFilesReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFilesReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFilesReply) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *ListFilesReply) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

// 获取文件详情请求
type GetFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{5}
}

func (x *GetFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetFileRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取文件详情响应
type GetFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *FileInfo              `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileReply) Reset() {
	*x = GetFileReply{}
	mi := &file_file_v1_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileReply) ProtoMessage() {}

func (x *GetFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileReply.ProtoReflect.Descriptor instead.
func (*GetFileReply) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{6}
}

func (x *GetFileReply) GetFile() *FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

// 下载文件请求
type DownloadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DownloadFileRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 下载文件响应
type DownloadFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileReply) Reset() {
	*x = DownloadFileReply{}
	mi := &file_file_v1_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReply) ProtoMessage() {}

func (x *DownloadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReply.ProtoReflect.Descriptor instead.
func (*DownloadFileReply) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{8}
}

func (x *DownloadFileReply) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *DownloadFileReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadFileReply) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

// 删除文件请求
type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_file_v1_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFileRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DeleteFileRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 删除文件响应
type DeleteFileReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileReply) Reset() {
	*x = DeleteFileReply{}
	mi := &file_file_v1_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileReply) ProtoMessage() {}

func (x *DeleteFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_file_v1_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileReply.ProtoReflect.Descriptor instead.
func (*DeleteFileReply) Descriptor() ([]byte, []int) {
	return file_file_v1_file_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteFileReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteFileReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_file_v1_file_proto protoreflect.FileDescriptor

const file_file_v1_file_proto_rawDesc = "" +
	"\n" +
	"\x12file/v1/file.proto\x12\vapi.file.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\xce\x02\n" +
	"\bFileInfo\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12#\n" +
	"\roriginal_name\x18\x03 \x01(\tR\foriginalName\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\b \x01(\x03R\x06userId\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xab\x01\n" +
	"\rUploadRequest\x12\x1b\n" +
	"\x04file\x18\x01 \x01(\fB\a\xfaB\x04z\x02\x10\x01R\x04file\x12#\n" +
	"\bfilename\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bfilename\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12 \n" +
	"\auser_id\x18\x05 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userId\"8\n" +
	"\vUploadReply\x12)\n" +
	"\x04file\x18\x01 \x01(\v2\x15.api.file.v1.FileInfoR\x04file\"\xef\x01\n" +
	"\x10ListFilesRequest\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\x04page\x12$\n" +
	"\bper_page\x18\x02 \x01(\x05B\t\xfaB\x06\x1a\x04\x18d(\x01R\aperPage\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12 \n" +
	"\auser_id\x18\x05 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userId\x12#\n" +
	"\rcreated_after\x18\x06 \x01(\tR\fcreatedAfter\x12%\n" +
	"\x0ecreated_before\x18\a \x01(\tR\rcreatedBefore\"\xa3\x01\n" +
	"\x0eListFilesReply\x12+\n" +
	"\x05files\x18\x01 \x03(\v2\x15.api.file.v1.FileInfoR\x05files\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x19\n" +
	"\bper_page\x18\x04 \x01(\x05R\aperPage\x12\x1f\n" +
	"\vtotal_pages\x18\x05 \x01(\x05R\n" +
	"totalPages\"T\n" +
	"\x0eGetFileRequest\x12 \n" +
	"\afile_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06fileId\x12 \n" +
	"\auser_id\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userId\"9\n" +
	"\fGetFileReply\x12)\n" +
	"\x04file\x18\x01 \x01(\v2\x15.api.file.v1.FileInfoR\x04file\"Y\n" +
	"\x13DownloadFileRequest\x12 \n" +
	"\afile_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06fileId\x12 \n" +
	"\auser_id\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userId\"f\n" +
	"\x11DownloadFileReply\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\"W\n" +
	"\x11DeleteFileRequest\x12 \n" +
	"\afile_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06fileId\x12 \n" +
	"\auser_id\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06userId\"E\n" +
	"\x0fDeleteFileReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x9b\x04\n" +
	"\vFileService\x12_\n" +
	"\x06Upload\x12\x1a.api.file.v1.UploadRequest\x1a\x18.api.file.v1.UploadReply\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/api/v1/files/upload\x12^\n" +
	"\tListFiles\x12\x1d.api.file.v1.ListFilesRequest\x1a\x1b.api.file.v1.ListFilesReply\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/api/v1/files\x12b\n" +
	"\aGetFile\x12\x1b.api.file.v1.GetFileRequest\x1a\x19.api.file.v1.GetFileReply\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/files/{file_id}\x12z\n" +
	"\fDownloadFile\x12 .api.file.v1.DownloadFileRequest\x1a\x1e.api.file.v1.DownloadFileReply\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/files/{file_id}/download\x12k\n" +
	"\n" +
	"DeleteFile\x12\x1e.api.file.v1.DeleteFileRequest\x1a\x1c.api.file.v1.DeleteFileReply\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/api/v1/files/{file_id}BUZSgithub.com/lyb88999/resume_helper/backend/services/file-service/api/file/v1;v1b\x06proto3"

var (
	file_file_v1_file_proto_rawDescOnce sync.Once
	file_file_v1_file_proto_rawDescData []byte
)

func file_file_v1_file_proto_rawDescGZIP() []byte {
	file_file_v1_file_proto_rawDescOnce.Do(func() {
		file_file_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_v1_file_proto_rawDesc), len(file_file_v1_file_proto_rawDesc)))
	})
	return file_file_v1_file_proto_rawDescData
}

var file_file_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_file_v1_file_proto_goTypes = []any{
	(*FileInfo)(nil),              // 0: api.file.v1.FileInfo
	(*UploadRequest)(nil),         // 1: api.file.v1.UploadRequest
	(*UploadReply)(nil),           // 2: api.file.v1.UploadReply
	(*ListFilesRequest)(nil),      // 3: api.file.v1.ListFilesRequest
	(*ListFilesReply)(nil),        // 4: api.file.v1.ListFilesReply
	(*GetFileRequest)(nil),        // 5: api.file.v1.GetFileRequest
	(*GetFileReply)(nil),          // 6: api.file.v1.GetFileReply
	(*DownloadFileRequest)(nil),   // 7: api.file.v1.DownloadFileRequest
	(*DownloadFileReply)(nil),     // 8: api.file.v1.DownloadFileReply
	(*DeleteFileRequest)(nil),     // 9: api.file.v1.DeleteFileRequest
	(*DeleteFileReply)(nil),       // 10: api.file.v1.DeleteFileReply
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_file_v1_file_proto_depIdxs = []int32{
	11, // 0: api.file.v1.FileInfo.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: api.file.v1.FileInfo.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: api.file.v1.UploadReply.file:type_name -> api.file.v1.FileInfo
	0,  // 3: api.file.v1.ListFilesReply.files:type_name -> api.file.v1.FileInfo
	0,  // 4: api.file.v1.GetFileReply.file:type_name -> api.file.v1.FileInfo
	1,  // 5: api.file.v1.FileService.Upload:input_type -> api.file.v1.UploadRequest
	3,  // 6: api.file.v1.FileService.ListFiles:input_type -> api.file.v1.ListFilesRequest
	5,  // 7: api.file.v1.FileService.GetFile:input_type -> api.file.v1.GetFileRequest
	7,  // 8: api.file.v1.FileService.DownloadFile:input_type -> api.file.v1.DownloadFileRequest
	9,  // 9: api.file.v1.FileService.DeleteFile:input_type -> api.file.v1.DeleteFileRequest
	2,  // 10: api.file.v1.FileService.Upload:output_type -> api.file.v1.UploadReply
	4,  // 11: api.file.v1.FileService.ListFiles:output_type -> api.file.v1.ListFilesReply
	6,  // 12: api.file.v1.FileService.GetFile:output_type -> api.file.v1.GetFileReply
	8,  // 13: api.file.v1.FileService.DownloadFile:output_type -> api.file.v1.DownloadFileReply
	10, // 14: api.file.v1.FileService.DeleteFile:output_type -> api.file.v1.DeleteFileReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_file_v1_file_proto_init() }
func file_file_v1_file_proto_init() {
	if File_file_v1_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_v1_file_proto_rawDesc), len(file_file_v1_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_v1_file_proto_goTypes,
		DependencyIndexes: file_file_v1_file_proto_depIdxs,
		MessageInfos:      file_file_v1_file_proto_msgTypes,
	}.Build()
	File_file_v1_file_proto = out.File
	file_file_v1_file_proto_goTypes = nil
	file_file_v1_file_proto_depIdxs = nil
}
